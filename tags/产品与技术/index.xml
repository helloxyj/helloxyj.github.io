<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>产品与技术 on 小眼睛的自言自语</title>
    <link>http://blog.xyj.name/tags/%E4%BA%A7%E5%93%81%E4%B8%8E%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 产品与技术 on 小眼睛的自言自语</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright©2016 xyj.name 版权所有</copyright>
    <lastBuildDate>Tue, 31 May 2016 11:20:39 +0800</lastBuildDate>
    <atom:link href="http://blog.xyj.name/tags/%E4%BA%A7%E5%93%81%E4%B8%8E%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Octave简单应用(一)</title>
      <link>http://blog.xyj.name/post/octave/</link>
      <pubDate>Tue, 31 May 2016 11:20:39 +0800</pubDate>
      
      <guid>http://blog.xyj.name/post/octave/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://ww2.sinaimg.cn/mw690/6f4077f3jw1f4eedagp71j203r03rjrb.jpg&#34; alt=&#34;Octave&#34; title=&#34;Octave&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://wiki.octave.org/GNU_Octave_Wiki&#34;&gt;Octave&lt;/a&gt; 是一个旨在提供与Matlab语法兼容的开放源代码科学计算及数值分析的工具；它提供了方便的互动命令列接口来解决线性与非线性的数值运算问题，并可将计算结果可视化，与高价的商业软体MATLAB语法几乎兼容&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;环境搭建:3c8609161f4efd1f737bc9e1847d4269&#34;&gt;环境搭建&lt;/h2&gt;

&lt;h3 id=&#34;安装octave:3c8609161f4efd1f737bc9e1847d4269&#34;&gt;安装octave&lt;/h3&gt;

&lt;p&gt;Mac OSX平台下，用神器Homebrew安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew tap homebrew/science
brew update &amp;amp;&amp;amp; brew upgrade 
brew install octave 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成看到如下提示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setenv(&#39;GNUTERM&#39;,&#39;qt&#39;)    # Requires QT; install gnuplot --with-qt
setenv(&#39;GNUTERM&#39;,&#39;x11&#39;)   # Requires XQuartz; install gnuplot --with-x11
setenv(&#39;GNUTERM&#39;,&#39;wxt&#39;)   # Requires wxmac; install gnuplot --with-wxmac
setenv(&#39;GNUTERM&#39;,&#39;aqua&#39;)  # Requires AquaTerm; install gnuplot --with-aquaterm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里提示我们要设置默认的graphics toolkit。首先选择GUI的展示基于那种框架，我选择x11。安装gnuplot：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install gnuplot --with-x11&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;配置:3c8609161f4efd1f737bc9e1847d4269&#34;&gt;配置&lt;/h3&gt;

&lt;p&gt;在 .bash_profile种添加环境变量&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export FONTCONFIG_PATH=/opt/X11/lib/X11/fontconfig 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置默认的graphics toolkit ，在配置文件
&lt;code&gt;/usr/local/share/octave/site/m/startup/octaverc&lt;/code&gt; 中添加 &lt;code&gt;setenv(&#39;GNUTERM&#39;,&#39;x11&#39;)&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;启动:3c8609161f4efd1f737bc9e1847d4269&#34;&gt;启动&lt;/h3&gt;

&lt;p&gt;直接命令行执行octave ，或者保存成脚本，打开脚本编辑器新加脚本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tell application &amp;quot;Terminal&amp;quot;
 do script &amp;quot;`which octave`; exit&amp;quot;
end tell
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存成octave.app，在Launchapad中可以看到octave.app的图标，点击即可打开ocatave&lt;/p&gt;

&lt;p&gt;在命令窗口种安装需要的package，比如image：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pkg install -forge image&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;简单操作:3c8609161f4efd1f737bc9e1847d4269&#34;&gt;简单操作&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;矩阵操作&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/mw690/6f4077f3jw1f4ecnkt3spj20aw0dpgm1.jpg&#34; alt=&#34;矩阵操作&#34; title=&#34;矩阵操作&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;函数图像&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://ww3.sinaimg.cn/mw690/6f4077f3jw1f4ecunwoebj20gk0glt9u.jpg&#34; alt=&#34;函数图像&#34; title=&#34;函数图像&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;几种滤波器实现:3c8609161f4efd1f737bc9e1847d4269&#34;&gt;几种滤波器实现&lt;/h2&gt;

&lt;h3 id=&#34;均值滤波器:3c8609161f4efd1f737bc9e1847d4269&#34;&gt;均值滤波器&lt;/h3&gt;

&lt;p&gt;原理：&lt;/p&gt;

&lt;p&gt;均值滤波也称为线性滤波，其采用的主要方法为邻域平均法。线性滤波的基本原理是用均值代替原图像中的各个像素值，即对待处理的当前像素点（x，y），选择一个模板，该模板由其近邻的若干像素组成，求模板中所有像素的均值，再把该均值赋予当前像素点（x，y），作为处理后图像在该点上的灰度g（x，y），即g（x，y）=1/m ∑f（x，y） m为该模板中包含当前像素在内的像素总个数。&lt;/p&gt;

&lt;p&gt;实现：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function [retval] = avg_filter (matrix,n)
##转成double计算
rst = double(matrix);
[row, column] = size(matrix);
model(1:n,1:n) = 1
for i=1:row-n+1
  for j=1:column-n+1
    c = rst(i:i+(n-1),j:j+(n-1)).*model;
    s = sum(sum(c));
    #模板内像素平均值
    rst(i+(n-1)/2,j+(n-1)/2) = s/(n*n);
  end
end
retval = uint8(rst);
endfunction
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;p&gt;它不能很好地保护图像细节，在图像去噪的同时也破坏了图像的细节部分，从而使图像变得模糊，不能很好地去除噪声点&lt;/p&gt;

&lt;p&gt;示例：&lt;/p&gt;

&lt;p&gt;原始图片&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww2.sinaimg.cn/mw690/6f4077f3jw1f4ed599leaj20c1090js0.jpg&#34; alt=&#34;原始图片&#34; title=&#34;原始图片&#34; /&gt;&lt;/p&gt;

&lt;p&gt;结果图片&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww3.sinaimg.cn/mw690/6f4077f3jw1f4ed59ml2dj20by08wmxo.jpg&#34; alt=&#34;结果图片&#34; title=&#34;结果图片&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;中值滤波器:3c8609161f4efd1f737bc9e1847d4269&#34;&gt;中值滤波器&lt;/h3&gt;

&lt;p&gt;原理：&lt;/p&gt;

&lt;p&gt;中值滤波是基于排序统计理论的一种能有效抑制噪声的非线性信号处理技术，中值滤波的基本原理是把数字图像或数字序列中一点的值用该点的一个邻域中各点值的中值代替，让周围的像素值接近的真实值，从而消除孤立的噪声点。方法是用某种结构的二维滑动模板，将板内像素按照像素值的大小进行排序，生成单调上升（或下降）的为二维数据序列。二维中值滤波输出为g（x,y）=med{f(x-k,y-l),(k,l∈W)} ，其中，f(x,y)，g(x,y)分别为原始图像和处理后图像。W为二维模板，通常为3*3，5*5区域，也可以是不同的的形状，如线状，圆形，十字形，圆环形等。&lt;/p&gt;

&lt;p&gt;实现：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function [retval] = middle_filter (matrix,n)
#转成double计算
rst=double(matrix);
[row, column]=size(matrix);
for i=1:row-n+1
  for j=1:row-n+1
    #取出从(i,j)开始的n行n列元素,即模板(n×n的)
    col = rst(i:i+(n-1),j:j+(n-1));
    #将分块矩阵变为一个行矩阵
    tmp = []
    for index=1:n
      tmp=[tmp,col(index,:)];
    end
    #求中值
    mm=median(tmp);
    rst(i+(n-1)/2,j+(n-1)/2)=mm;
  end
end
#转成uint输出
retval = uint8(rst);
endfunction
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;缺点：
基于图像滤波器所包围区域中像素（灰度）的排序，选择适当的点来替代污染点的值，所以处理效果好。因为噪声的均值不为0，所以均值滤波不能很好地去除噪声点&lt;/p&gt;

&lt;p&gt;示例：&lt;/p&gt;

&lt;p&gt;原始图片(被脉冲噪声污染的电路板的图像)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww2.sinaimg.cn/mw690/6f4077f3jw1f4eb1ce8mdj20cn0c8tcw.jpg&#34; alt=&#34;原始图片&#34; title=&#34;原始图片&#34; /&gt;&lt;/p&gt;

&lt;p&gt;处理之后&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww4.sinaimg.cn/mw690/6f4077f3jw1f4eb1bycogj20cn0c8mxv.jpg&#34; alt=&#34;处理之后&#34; title=&#34;处理之后&#34; /&gt;&lt;/p&gt;

&lt;p&gt;（—— 同时发于简书）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>产品和技术为什么总有矛盾</title>
      <link>http://blog.xyj.name/post/developers-with-pm/</link>
      <pubDate>Wed, 19 Aug 2015 23:14:25 +0800</pubDate>
      
      <guid>http://blog.xyj.name/post/developers-with-pm/</guid>
      <description>&lt;p&gt;最近在思考一个问题：为什么待过的公司都存在产品同学和技术同学表面融洽私下诋毁的现象？接触过不少产品，自己就是开发，试着从这几个方面对比一下：
&amp;gt; 性格&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;火。产品同学都有点文艺范，追求内心向往的那种感觉。想法有时会天马行空，往往蹦出个火花就能想象出一堆东西让技术去实现。不注重细节和尝试的过程，说白了是感性大于理性。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;冰。技术同学偏内向、宅，沟通太硬。他们的世界就是0和1，如果某个功能不能实现，往往就硬生的一句实现不了。既不委婉又不能提出替代的意见，大有一副爱咋咋的架势。生活比较散漫缺点情怀或者浪漫。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;冰与火本来就不相容，绝大部门产品和技术的性格截然不同，生活圈子也不相同。只是单纯因为毛爷爷在一起工作，矛盾必不可少。&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;内容&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;施令。产品同学是发出需求的人，是把设计好的图纸交给工人来实施。委托技术来把自己想法变成产品，与技术是一种上下游的合作关系。在一些公司甚至有点包工头的意思，最后很容易变成监督开发。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;执行。技术同学是具体实施产品经理想法的人，通过一行行的代码把纸面上的需求变成活生生的产品。好比我们建造一所房子，技术同学是真正把啥子砖头石块这些原材料组合成房子的人。说白了就是具体干活的人。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;一个发指令一个来干活，时间久了必然会各自抱怨。“你干活怎么那么慢，这么简单的东西实现了那么久。”“你站着说话不腰疼，需求来回修改动动脑子想清楚了再来改行吗，不尊重我们的劳动成果”&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;职责&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;大局。产品同学属于对产品大局的把控，通过产品来实现大到公司的战略目标小到部门的KPI。关心的往往是更高更远的目标，或者灵光一现的一个好点子。没有时间也不太可能把所有的细节考虑清楚。有时候给人感觉是听风就是雨，没有节奏感和计划性，或者一个计划说到5年以后的事情了。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;细节。技术同学的职责看似相对简单，实现产品的想法，保证系统正常提供服务。属于具体执行的角色，需要对细节关注。你产品经理只是说建这个房子，建成什么样。用啥料、多少沙子多少石子，这些都需要技术同学考虑。房子能抗几级地震，你也没说清楚啊？防盗门装B级锁还是C级锁你产品经理到底怎么想的？&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;一个组织中，总要各司其职，有人顾全大局有人关心细节。关心大局就必然要忽略掉一些细节，过于关注细节又不能跳出自己的处境在更高的层面上看问题，就不能理解组织的很多决定。这本身又有一个矛盾点。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;其实开发和产品是相辅相成的，离了产品的需求技术只是个花架子，没了技术的支持产品也就是只能想想。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>